'use client';

import React, {useEffect, useState} from 'react';
import Link from 'next/link';
import Image from 'next/image';
import { Menu, ArrowLeft, Settings } from 'lucide-react';

const TermsOfUse: React.FC = () => {
  const [menuOpen, setMenuOpen] = useState(false);
  const [language, setLanguage] = useState<'en' | 'ru'>('en');

  useEffect(() => {
    const savedLang = localStorage.getItem('arctic-language');
    if (savedLang === 'ru' || savedLang === 'en') {
      setLanguage(savedLang);
    }
  }, []);


  const t = {
    en: {
      contact: "Contact us",
      terms: "Terms of Use",
      title: "ARctic ‚Äì Terms of Use",
      backToHome: "‚¨Ö Back to Home",
      camera: "1. üì∑ Camera Access",
      cameraDetails: [
        "ARctic requires access to your device‚Äôs camera to enable augmented reality functionality:",
        "Used to detect visual markers and display AR content.",
        "We do not record, store, or transmit any camera data.",
        "Your camera feed stays local to your device and browser only."
      ],
      privacy: "2. üîí Privacy & Data",
      privacyDetails: [
        "No personal data is collected or stored.",
        "We do not access your location, contacts, or files.",
        "No third-party analytics or advertising is used."
      ],
      consent: "3. ‚úÖ User Consent",
      consentIntro: "By using ARctic, you agree to:",
      consentDetails: [
        "Allow access to your device‚Äôs camera.",
        "Use the app responsibly in a safe, distraction-free environment."
      ],
      consentFooter: "If you do not agree with these terms, please do not use ARctic.",
      disclaimer: "4. ‚ö†Ô∏è Disclaimer",
      disclaimerDetails: [
        "ARctic is provided ‚Äúas-is‚Äù for demo and educational use.",
        "We are not liable for device issues, performance, or user misuse.",
        "For best results, use in a well-lit, open environment."
      ],
      contactSection: "5. üì© Contact",
      contactText: "For support or questions, email us at",
    },
    ru: {
      contact: "–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏",
      terms: "–£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è",
      title: "ARctic ‚Äì –£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è",
      backToHome: "‚¨Ö –ù–∞–∑–∞–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é",
      camera: "1. üì∑ –î–æ—Å—Ç—É–ø –∫ –∫–∞–º–µ—Ä–µ",
      cameraDetails: [
        "ARctic —Ç—Ä–µ–±—É–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –∫–∞–º–µ—Ä–µ –≤–∞—à–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã –¥–æ–ø–æ–ª–Ω–µ–Ω–Ω–æ–π —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏:",
        "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –º–∞—Ä–∫–µ—Ä–æ–≤ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è AR-–∫–æ–Ω—Ç–µ–Ω—Ç–∞.",
        "–ú—ã –Ω–µ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º, –Ω–µ —Ö—Ä–∞–Ω–∏–º –∏ –Ω–µ –ø–µ—Ä–µ–¥–∞—ë–º –¥–∞–Ω–Ω—ã–µ —Å –∫–∞–º–µ—Ä—ã.",
        "–ö–∞–º–µ—Ä–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω–æ –≤ –≤–∞—à–µ–º –±—Ä–∞—É–∑–µ—Ä–µ."
      ],
      privacy: "2. üîí –ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –∏ –¥–∞–Ω–Ω—ã–µ",
      privacyDetails: [
        "–õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ–±–∏—Ä–∞—é—Ç—Å—è –∏ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è.",
        "–ú—ã –Ω–µ –ø–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –≤–∞—à–µ–º—É –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—é, –∫–æ–Ω—Ç–∞–∫—Ç–∞–º –∏–ª–∏ —Ñ–∞–π–ª–∞–º.",
        "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Å—Ç–æ—Ä–æ–Ω–Ω—è—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏–ª–∏ —Ä–µ–∫–ª–∞–º–∞."
      ],
      consent: "3. ‚úÖ –°–æ–≥–ª–∞—Å–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
      consentIntro: "–ò—Å–ø–æ–ª—å–∑—É—è ARctic, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å:",
      consentDetails: [
        "–†–∞–∑—Ä–µ—à–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫–∞–º–µ—Ä–µ –≤–∞—à–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞.",
        "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ –∏ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –æ–±—Å—Ç–∞–Ω–æ–≤–∫–µ."
      ],
      consentFooter: "–ï—Å–ª–∏ –≤—ã –Ω–µ —Å–æ–≥–ª–∞—Å–Ω—ã —Å —ç—Ç–∏–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏, –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ARctic.",
      disclaimer: "4. ‚ö†Ô∏è –û—Ç–∫–∞–∑ –æ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏",
      disclaimerDetails: [
        "ARctic –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –∫–∞–∫ –µ—Å—Ç—å –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∏ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö —Ü–µ–ª–µ–π.",
        "–ú—ã –Ω–µ –Ω–µ—Å–µ–º –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º –∏–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ.",
        "–î–ª—è –ª—É—á—à–µ–π —Ä–∞–±–æ—Ç—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤ —Ö–æ—Ä–æ—à–æ –æ—Å–≤–µ—â—ë–Ω–Ω–æ–º –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ."
      ],
      contactSection: "5. üì© –ö–æ–Ω—Ç–∞–∫—Ç—ã",
      contactText: "–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–µ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –Ω–∞",
    },
  }[language];


  return (
      <div className="bg-black text-white min-h-screen flex flex-col relative overflow-hidden">
        {/* Header */}
        <header className="flex justify-between items-center px-6 py-4 border-b border-white/10">
          <div className="flex items-center gap-3">
            <Image src="/logo.svg" alt="logo" width={40} height={40} />
            <p className="text-2xl font-bold">ARctic</p>
          </div>

          <button className="md:hidden" onClick={() => setMenuOpen(true)}>
            <Menu className="w-6 h-6 text-white" />
          </button>

          <div className="hidden md:flex items-center gap-4">
            <Link href="/settings">
              <Settings className="text-white w-6 h-6" />
            </Link>
          </div>
        </header>

        {/* Hamburger Menu */}
        <div
            className={`fixed inset-0 bg-black text-white z-50 transition-transform duration-300 ease-in-out ${
                menuOpen ? 'translate-x-0' : '-translate-x-full'
            }`}
        >
          {/* Menu Header */}
          <div className="flex items-center justify-between px-6 py-5 border-b border-white/10">
            <button onClick={() => setMenuOpen(false)}>
              <ArrowLeft className="w-6 h-6 text-white" />
            </button>
            <div className="flex items-center gap-2">
              <Image src="/logo.svg" alt="logo" width={30} height={30} />
              <p className="text-xl font-bold">ARctic</p>
            </div>
            <div className="w-6" />
          </div>

          {/* Menu Links */}
          <nav className="flex flex-col items-center px-6 py-10 gap-5">

            <Link href="/" onClick={() => setMenuOpen(false)} className="w-full max-w-xs">
              <div className="bg-orange-500 hover:bg-orange-600 text-white text-lg font-semibold py-3 rounded-lg text-center transition-all">
                Home
              </div>
            </Link>

            {/*<Link href="/settings" onClick={() => setMenuOpen(false)} className="w-full max-w-xs">*/}
            {/*  <div className="bg-white text-black text-lg font-semibold py-3 rounded-lg text-center hover:bg-gray-100 transition-all">*/}
            {/*    Settings*/}
            {/*  </div>*/}
            {/*</Link>*/}

            <Link href="/contact" onClick={() => setMenuOpen(false)} className="w-full max-w-xs">
              <div className="bg-white text-black text-lg font-semibold py-3 rounded-lg text-center hover:bg-gray-100 transition-all">
                {t.contact}
              </div>
            </Link>

            <Link href="/terms" onClick={() => setMenuOpen(false)} className="w-full max-w-xs">
              <div className="bg-white text-black text-lg font-semibold py-3 rounded-lg text-center hover:bg-gray-100 transition-all">
                {t.terms}
              </div>
            </Link>

          </nav>
        </div>

        {/* Main Content */}
        {/* Main Content */}
        <main className="flex-grow px-6 py-10 flex flex-col items-center">
          <div className="max-w-3xl w-full space-y-10">
            <header className="text-center">
              <h1 className="text-4xl font-bold mb-2">{t.title}</h1>
            </header>

            {/* Sections */}
            {[
              {
                title: t.camera,
                content: (
                    <>
                      <p className="mb-4">{t.cameraDetails[0]}</p>
                      <ul className="list-disc list-inside space-y-2 text-gray-300">
                        {t.cameraDetails.slice(1).map((item, i) => (
                            <li key={i}>{item}</li>
                        ))}
                      </ul>
                    </>
                ),
              },
              {
                title: t.privacy,
                content: (
                    <ul className="list-disc list-inside space-y-2 text-gray-300">
                      {t.privacyDetails.map((item, i) => (
                          <li key={i}>{item}</li>
                      ))}
                    </ul>
                ),
              },
              {
                title: t.consent,
                content: (
                    <>
                      <p className="mb-4">{t.consentIntro}</p>
                      <ul className="list-disc list-inside space-y-2 text-gray-300">
                        {t.consentDetails.map((item, i) => (
                            <li key={i}>{item}</li>
                        ))}
                      </ul>
                      <p className="mt-4 text-gray-400">{t.consentFooter}</p>
                    </>
                ),
              },
              {
                title: t.disclaimer,
                content: (
                    <ul className="list-disc list-inside space-y-2 text-gray-300">
                      {t.disclaimerDetails.map((item, i) => (
                          <li key={i}>{item}</li>
                      ))}
                    </ul>
                ),
              },
              {
                title: t.contactSection,
                content: (
                    <p className="text-gray-300">
                      {t.contactText}{' '}
                      <a
                          href="mailto:deepfakeprojectteam@gmail.com"
                          className="text-blue-400 underline hover:text-blue-300 transition"
                      >
                        deepfakeprojectteam@gmail.com
                      </a>
                    </p>
                ),
              },
            ].map(({ title, content }, index) => (
                <section
                    key={index}
                    className="bg-white/5 p-6 rounded-lg border border-white/10 shadow-inner space-y-4"
                >
                  <h2 className="text-xl font-semibold text-white">{title}</h2>
                  <div className="text-sm leading-relaxed">{content}</div>
                </section>
            ))}

            <div className="text-center">
              <Link href="/">
                <button className="bg-orange-500 hover:bg-orange-600 text-white font-medium text-base py-3 px-6 rounded-full transition-all duration-200">
                  {t.backToHome}
                </button>
              </Link>
            </div>

            <footer className="text-center text-gray-500 text-xs pt-10 border-t border-white/10">
              &copy; 2025 ARctic Project. All rights reserved.
            </footer>
          </div>
        </main>

      </div>
  );
};

export default TermsOfUse;
